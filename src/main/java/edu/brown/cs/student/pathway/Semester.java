package edu.brown.cs.student.pathway;

import java.util.List;

public class Semester {
  /**
   * If I got a Pathway and wanted to edit it, how would I change it?
   * - Swap with course of same category
   *   -> What if they swap a course that is a next or has a next?
   *   -> What if they swap a course that is a prereq for another course in pathway?
   *   -> What if the swap can't happen that semester?
   *   -> Can we honor workload preference if they swap?
   *
   * - Move course to a different semester (take AI in semester 5 instead of 3)
   *  -> What if they try to move the course to a semester when it's not offered?
   *  -> What if they try to move the course to a semester when it's not a source?
   *
   * - Add a desired course
   *  -> What if they want to add a course to a semester when it's not offered?
   *
   * - Users CANNOT just remove a course (won't satisfy reqs)
   */

  private List<Node> courses;
  private int semNumber;
  // coursesByCat is the sources this semNumber partitioned by category.
  // This will be used for editing Pathways in the GUI:
  // - can add any course available that sem [info in node]
  // - can move course to any sem it's offered as long as it's a source
  //   [info in semester]
  // - can swap courses of equivalent categories [info in semester]
  private List<Node>[] coursesByCat;
  private int numCategories;

  public Semester(int sem, List<Node> taking) {
    semNumber = sem;
    courses = taking; // courses generated by algo, before edits
  }

  public int getSemester() {
    return semNumber;
  }

  public List<Node> getCourses() {
    return courses;
  }

  public void addCourse(Node course) {
    courses.add(course);
  }

  public void removeCourse(Node course) {
    courses.remove(course);
  }

  public List<Node> getCourseEquivalents(Node course) {
    return coursesByCat[course.getCategory()];
  }

  public List<Node>[] getAllCoursesAvailableThisSemester() {
    return coursesByCat;
  }

}
